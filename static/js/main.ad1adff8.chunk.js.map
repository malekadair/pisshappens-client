{"version":3,"sources":["components/Nav/Nav.js","components/Footer/Footer.js","routes/HomePage/HomePage.js","components/Comic/Comic.js","components/Welcome/Welcome.js","contexts/ComicsContext.js","config.js","routes/ComicsListPage/ComicsListPage.js","components/CopyUrl/CopyUrl.js","contexts/ComicContext.js","contexts/CommentsContext.js","routes/ComicPage/ComicPage.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","to","Footer","href","target","rel","HomePage","Component","Comic","props","console","log","comic","id","title","description","date_created","ComicsContext","React","createContext","comicsList","error","setError","clearError","setComicsList","clearComicsList","ComicsProvider","children","useState","value","Provider","ComicsListPage","comics","setComics","isLoading","setIsloading","useContext","clearErrorList","useEffect","a","axios","config","response","data","fetchComics","map","key","CopyUrl","comicUrl","copyUrl","onSubmit","e","type","defaultValue","ComicContext","comicData","setComicData","clearComicData","ComicProvider","CommentsContext","commentsList","setCommentsList","clearCommentsList","CommentsProvider","ComicPage","setComic","comments","setComments","commentText","setCommentText","comicId","clearCommentList","match","params","fetchComic","fetchComments","postComment","comic_id","user_id","madeUpUserId","comment","text","fetch","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","url","comic_url","allFrames","i","frames","push","frame","src","renderComicFrames","preventDefault","copyText","document","querySelector","select","setSelectionRange","execCommand","full_name","newComment","prevState","placeholder","onChange","disabled","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ad1adff8.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './Nav.css'\n// import TokenService from '../../services/token-service'\n\n\nconst Nav = () => {\n    const handleLogoutClick = () => {\n        // TokenService.clearAuthToken();\n    };\n\n    const renderLogout = () => {\n        return (\n            <header>\n                <Link className=\"link\" onClick={this.handleLogoutClick} to=\"/\">\n                    Logout\n                </Link>\n            </header>\n        );\n    }\n    const renderLogin = () => {\n        return (\n            <div>\n                <Link className='link' to='/login'>Login</Link>\n                <Link className='link' to='/register'>Register</Link>\n            </div>\n        );\n    }\n    return (\n        <nav className='zone sticky main-nav'>\n            <Link className='right  siteTitle' to='/'>PissHappens</Link>\n            <Link className='comics' to='/comics'>See Comics</Link>\n        </nav>\n    )\n}\n\nexport default Nav\n","import React from 'react'\nimport './Footer.css'\n\nfunction Footer() {\n\treturn (\n\t\t<footer className='zone footer-content'>\n\t\t\t<h2 className='footer-link footer-right'>c@2020</h2>\n\t\t\t<a className='footer-link grace'\n\t\t\t\thref='https://arbitraders.io/'\n\t\t\t\ttarget='_blank'\n\t\t\t\trel='noopener noreferrer'>\n\t\t\t\tKevin Schwindt\n\t\t\t\t</a>\n\t\t\t<a className='footer-link malek'\n\t\t\t\thref='https://malekadair.github.io/portfolio/'\n\t\t\t\ttarget='_blank'\n\t\t\t\trel='noopener noreferrer'>\n\t\t\t\tMalek Adair\n\t\t\t</a>\n\t\t</footer>\n\t)\n}\n\nexport default Footer","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n// import Welcome from '../../components/Welcome/Welcome';\nimport Nav from '../../components/Nav/Nav';\n// import TokenService from '../../services/token-service'\n// import WinnersApiService from '../../services/winners-api-service'\n// import WinnersContext from '../../contexts/winnersContext'\n// import Footer from '../../components/Footer/Footer'\n\nimport './HomePage.css'\nimport Footer from '../../components/Footer/Footer';\n\nclass HomePage extends Component {\n\t// static contextType = WinnersContext\n\n\tcomponentDidMount() {\n\t\t// this.context.clearError();\n\t\t// WinnersApiService.getAllWinners()\n\t\t// \t.then(this.context.setWinners)\n\t\t// \t.catch(this.context.setError)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Nav />\n\t\t\t\t<main>\n\t\t\t\t\t<h2>HomePage</h2>\n\t\t\t\t\t<p>Welcome to PissHappens Comics! Click \"See Comics\" to check out some of our most recently added comics.</p>\n\t\t\t\t</main>\n\t\t\t\t<Footer />\n\t\t\t\t{/* <header>\n\t\t\t\t\t<Nav />\n\t\t\t\t</header>\n\t\t\t\t<main>\n\t\t\t\t\t<div className='HomePage'>\n\n\t\t\t\t\t\t{TokenService.hasAuthToken()\n\t\t\t\t\t\t\t? <WinnersList />\n\t\t\t\t\t\t\t: <Welcome />}\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Link to='/guess' className='guess-button'>Guess!</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</main>\n\t\t\t\t<Footer /> */}\n\t\t\t</div >\n\t\t)\n\t}\n}\n\nexport default HomePage","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\n\nconst Comic = (props) => {\n\n\n\tconsole.log('props', props)\n\treturn (\n\t\t<Link to={`/comics/${props.comic.id}`}>\n\t\t\t<div className=\"comicItem\">\n\t\t\t\t<h4>{props.comic.title}</h4>\n\t\t\t\t<p>Comic #{props.comic.id}</p>\n\t\t\t\t<p>Title: {props.comic.title}</p>\n\t\t\t\t<p>Description: {props.comic.description}</p>\n\t\t\t\t<p>Added on: {props.comic.date_created}</p>\n\t\t\t\t{/* <p>Comic #{props.comic.id}</p> */}\n\t\t\t</div>\n\t\t</Link>\n\t);\n}\n\nexport default Comic;","import React, { Component } from 'react'\n// import green_ball from '../../img/green_ball.png'\n// import yellow_ball from '../../img/yellow_ball.png'\n// import red_ball from '../../img/red_ball.png'\n// import './Welcome.css'\n\nclass Welcome extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>Welcome</div>\n\t\t\t// <main>\n\t\t\t// \t<div className='grid-wrapper'>\n\t\t\t// \t\t<section className=\"welcomeSection\">\n\t\t\t// \t\t\t<div className='box one'>\n\t\t\t// \t\t\t\t<img src={green_ball} alt='green lottery ball' />\n\t\t\t// \t\t\t\t<p className='cardContent'>Do you want to have plain old fun in guessing the winning numbers for each Saturday’s PowerBall drawing?</p>\n\t\t\t// \t\t\t</div>\n\t\t\t// \t\t\t<div className='box two'>\n\t\t\t// \t\t\t\t<img src={yellow_ball} alt='yellow lottery ball' />\n\t\t\t// \t\t\t\t<p className='cardContent'>Would you like to share a motivational message to the world? How about promote your social media accounts?</p>\n\t\t\t// \t\t\t</div>\n\t\t\t// \t\t\t<div className='box three'>\n\t\t\t// \t\t\t\t<img src={red_ball} alt='lottery ball' />\n\t\t\t// \t\t\t\t<p className='cardContent'>Create an account, log-in, and submit your guess for the next drawing coming up this Saturday night!</p>\n\t\t\t// \t\t\t</div>\n\t\t\t// \t\t</section>\n\t\t\t// \t</div>\n\t\t\t// </main>\n\t\t)\n\t}\n}\n\nexport default Welcome\n\n\n\n","import React, { useContext, useState } from 'react'\n\nconst ComicsContext = React.createContext({\n\tcomicsList: [],\n\terror: null,\n\tsetError: () => { },\n\tclearError: () => { },\n\tsetComicsList: () => { },\n\tclearComicsList: () => { },\n\t// setReviews: () => { },\n\t// addReview: () => { }\n})\n\nexport function useComicsContext() {\n\treturn useContext(ComicsContext)\n}\nexport function ComicsProvider({ children }) {\n\tconst [comicsList, setComicsList] = useState([{ 'color': 'blue', 'name': 'gray', 'price': 1 }])\n\tconst [error, setError] = useState(false)\n\n\n\t// const setError = error => {\n\t// \tsetState({ error });\n\t// };\n\n\tconst clearError = () => {\n\t\tsetError({ error: null });\n\t};\n\n\t// const setComicsList = comicsList => {\n\t// \tsetComics({ comicsList });\n\t// };\n\n\tconst clearComicsList = () => {\n\t\tsetComicsList({});\n\t};\n\tconst value = {\n\t\tcomicsList: comicsList,\n\t\tsetComicsList: setComicsList,\n\t\terror: error,\n\t\tsetError: setError,\n\t\tclearError: clearError,\n\t\tclearComicsList: clearComicsList\n\t};\n\treturn (\n\t\t<ComicsContext.Provider value={value}>\n\t\t\t{children}\n\t\t</ComicsContext.Provider>\n\t)\n}","export default {\n  BF_API_ENDPOINT: \"https://brandfolder.com/api/v4\",\n  API_ENDPOINT: \"https://aqueous-beach-36007.herokuapp.com/api\",\n  TOKEN_KEY: 'pisshappens-client-auth-token'\n};\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport Welcome from '../../components/Welcome/Welcome';\nimport Nav from '../../components/Nav/Nav';\nimport Footer from '../../components/Footer/Footer';\n\nimport dummyList from '../../dummy'\nimport Comic from '../../components/Comic/Comic';\nimport axios from 'axios';\nimport { useComicsContext } from '../../contexts/ComicsContext'\nimport ComicsApiService from '../../services/comics-api-service'\nimport config from '../../config'\n\n\nconst ComicsListPage = (props) => {\n\tconst [comics, setComics] = useState([]);\n\tconst [isLoading, setIsloading] = useState(false)\n\tconst {\n\t\tcomicsList,\n\t\tsetComicsList,\n\t\terror,\n\t\tsetError,\n\t\tclearErrorList,\n\t\tclearComicsList\n\t} = useComicsContext()\n\n\tuseEffect(() => {\n\t\tconst fetchComics = async () => {\n\t\t\tsetIsloading(true)\n\t\t\tconst response = await axios(\n\t\t\t\t`${config.API_ENDPOINT}/comics`\n\t\t\t);\n\n\t\t\tsetComics(response.data);\n\t\t\tsetComicsList(response.data)\n\t\t\tsetIsloading(false)\n\t\t}\n\t\tfetchComics()\n\t}, []);\n\n\tconst renderComics = () => {\n\t\treturn comics.map(comic => <Comic key={comic.id} comic={comic} />)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Nav />\n\t\t\t<main>\n\t\t\t\t<h2>Comics List Page</h2>\n\t\t\t\t{isLoading ? 'Loading, please wait...' : renderComics()}\n\t\t\t</main>\n\t\t\t<Footer />\n\t\t\t{/* <header>\n\t\t\t\t\t<Nav />\n\t\t\t\t</header>\n\t\t\t\t<main>\n\t\t\t\t\t<div className='ComicsListPage'>\n\n\t\t\t\t\t\t{TokenService.hasAuthToken()\n\t\t\t\t\t\t\t? <WinnersList />\n\t\t\t\t\t\t\t: <Welcome />}\n\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Link to='/guess' className='guess-button'>Guess!</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</main>\n\t\t\t\t<Footer /> */}\n\t\t</div >\n\t)\n}\n\nexport default ComicsListPage","import React from 'react'\n\nfunction CopyUrl(props) {\n\tconst { comicUrl, copyUrl } = props\n\tconsole.log('asdfa', props)\n\treturn (\n\t\t<form onSubmit={(e) => copyUrl(e)}>\n\t\t\t<input id='copyUrl' type='text' defaultValue={comicUrl}></input>\n\t\t\t<button >Copy to clipboard</button>\n\t\t</form>\n\t)\n}\n\nexport default CopyUrl\n","import React, { useContext, useState } from 'react'\n\nconst ComicContext = React.createContext({\n\tcomicData: [],\n\terror: null,\n\tsetError: () => { },\n\tclearError: () => { },\n\tsetComicData: () => { },\n\tclearComicData: () => { },\n\t// setReviews: () => { },\n\t// addReview: () => { }\n})\n\nexport function useComicContext() {\n\treturn useContext(ComicContext)\n}\nexport function ComicProvider({ children }) {\n\tconst [comicData, setComicData] = useState([{ 'color': 'blue', 'name': 'gray', 'price': 1 }])\n\tconst [error, setError] = useState(false)\n\n\n\t// const setError = error => {\n\t// \tsetState({ error });\n\t// };\n\n\tconst clearError = () => {\n\t\tsetError({ error: null });\n\t};\n\n\t// const setComicData = comicData => {\n\t// \tsetComic({ comicData });\n\t// };\n\n\tconst clearComicData = () => {\n\t\tsetComicData({});\n\t};\n\tconst value = {\n\t\tcomicData: comicData,\n\t\tsetComicData: setComicData,\n\t\terror: error,\n\t\tsetError: setError,\n\t\tclearError: clearError,\n\t\tclearComicData: clearComicData\n\t};\n\treturn (\n\t\t<ComicContext.Provider value={value}>\n\t\t\t{children}\n\t\t</ComicContext.Provider>\n\t)\n}","import React, { useContext, useState } from 'react'\n\nconst CommentsContext = React.createContext({\n\tcommentsList: [],\n\terror: null,\n\tsetError: () => { },\n\tclearError: () => { },\n\tsetCommentsList: () => { },\n\tclearCommentsList: () => { },\n\t// setReviews: () => { },\n\t// addReview: () => { }\n})\n\nexport function useCommentsContext() {\n\treturn useContext(CommentsContext)\n}\nexport function CommentsProvider({ children }) {\n\tconst [commentsList, setCommentsList] = useState([{ 'color': 'blue', 'name': 'gray', 'price': 1 }])\n\tconst [error, setError] = useState(false)\n\n\n\t// const setError = error => {\n\t// \tsetState({ error });\n\t// };\n\n\tconst clearError = () => {\n\t\tsetError({ error: null });\n\t};\n\n\t// const setCommentsList = commentsList => {\n\t// \tsetComments({ commentsList });\n\t// };\n\n\tconst clearCommentsList = () => {\n\t\tsetCommentsList({});\n\t};\n\tconst value = {\n\t\tcommentsList: commentsList,\n\t\tsetCommentsList: setCommentsList,\n\t\terror: error,\n\t\tsetError: setError,\n\t\tclearError: clearError,\n\t\tclearCommentsList: clearCommentsList\n\t};\n\treturn (\n\t\t<CommentsContext.Provider value={value}>\n\t\t\t{children}\n\t\t</CommentsContext.Provider>\n\t)\n}","import React, { useContext, useState, useEffect, Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Welcome from '../../components/Welcome/Welcome';\nimport Nav from '../../components/Nav/Nav';\nimport Footer from '../../components/Footer/Footer';\nimport CopyUrl from '../../components/CopyUrl/CopyUrl';\nimport axios from 'axios';\nimport config from '../../config'\nimport { useComicContext } from '../../contexts/ComicContext'\nimport { useCommentsContext } from '../../contexts/CommentsContext'\n\n// import { useComics } from '../../contexts/ComicsContext'\n// import TokenService from '../../services/token-service'\n// import WinnersApiService from '../../services/winners-api-service'\n// import WinnersContext from '../../contexts/winnersContext'\n\nimport './ComicPage.css'\n// import Footer from '../../components/Footer/Footer';\n\nconst ComicPage = (props) => {\n\n\tconst [comic, setComic] = useState([]);\n\t// const { comics, setComics, error, setError, clearError, clearComics } = useComics()\n\tconst [comments, setComments] = useState([])\n\tconst [commentText, setCommentText] = useState('')\n\tconst [rando, setRando] = useState('')\n\tconst {\n\t\tcomicData,\n\t\tsetComicData,\n\t\terror: comicError,\n\t\tsetError: setComicError,\n\t\tclearError: clearComicError,\n\t\tclearComicData\n\t} = useComicContext()\n\tconst {\n\t\tcommentsList,\n\t\tsetCommentsList,\n\t\terror: commentError,\n\t\tsetError: setCommentError,\n\t\tclearError: clearCommentError,\n\t\tclearCommentList\n\t} = useCommentsContext()\n\tconst { comicId } = props.match.params\n\n\tuseEffect(() => {\n\n\t\tconst fetchComic = async () => {\n\t\t\tconst response = await axios(\n\t\t\t\t`${config.API_ENDPOINT}/comics/${comicId}`\n\t\t\t);\n\n\t\t\tsetComic(response.data);\n\t\t\tsetComicData(response.data)\n\t\t\tconsole.log('comic', response.data)\n\t\t}\n\t\tconst fetchComments = async () => {\n\t\t\tconst response = await axios(\n\t\t\t\t`${config.API_ENDPOINT}/comments/comic/${comicId}`\n\t\t\t);\n\n\t\t\tsetComments(response.data);\n\t\t\tsetCommentsList(response.data)\n\n\t\t\t// setComics(response.data)\n\t\t}\n\n\t\t// const fetchBFComic = async () => {\n\t\t// \tconst BFResponse = await axios(\n\t\t// \t\t`${config.BF_API_ENDPOINT}/schwindt/pisshappens/comics/attachments`\n\t\t// \t)\n\t\t// }\n\t\tfetchComic()\n\t\tfetchComments()\n\n\t\t// fetchBFComic()\n\t}, []);\n\tconst postComment = async (data) => {\n\t\tconst { comicId: comic_id, madeUpUserId: user_id, text: comment } = data\n\t\treturn await fetch(`${config.API_ENDPOINT}/comments`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tcomic_id,\n\t\t\t\tuser_id,\n\t\t\t\tcomment\n\t\t\t}),\n\t\t})\n\t\t\t.then(res =>\n\t\t\t\t(!res.ok)\n\t\t\t\t\t? res.json().then(e => Promise.reject(e))\n\t\t\t\t\t: res.json()\n\t\t\t)\n\t}\n\n\tconst copyUrl = (e) => {\n\t\te.preventDefault()\n\t\tconst copyText = document.querySelector('#copyUrl');\n\n\t\t/* Select the text field */\n\t\tcopyText.select();\n\t\tcopyText.setSelectionRange(0, 99999); /*For mobile devices*/\n\n\t\t/* Copy the text inside the text field */\n\t\tdocument.execCommand(\"copy\");\n\t}\n\tconst renderComicFrames = () => {\n\t\tconst allFrames = []\n\t\tfor (let i = 1; i <= comic.frames; i++) {\n\t\t\tallFrames.push(`${comic_url}?position=${i}`)\n\t\t}\n\t\treturn allFrames.map((frame, i) => <img src={frame} key={i} className=\"comicFrame\" />)\n\n\t}\n\tconst renderComments = () => {\n\t\treturn comments.map((comment, i) => <p key={i}>{comment.full_name} said: {comment.comment}</p>)\n\t}\n\t// const handleChange = event => {\n\t// \tconst { name, value, type, checked } = event.target;\n\t// \ttype === \"checkbox\"\n\t// \t\t? setCommentText({ [name]: checked })\n\t// \t\t: this.setState({ [name]: value });\n\t// };\n\tconst handleSubmit = (ev, text) => {\n\t\tev.preventDefault();\n\t\tconsole.log(`form submitted with this data: ${text}`)\n\t\t//this is being used to fake a user's info being provided by context\n\t\tconst madeUpUserId = 1\n\t\tconst data = { madeUpUserId, comicId, text }\n\t\tpostComment(data)\n\t\t\t.then(newComment => {\n\t\t\t\tconsole.log('newComment', newComment)\n\t\t\t\tsetComments(prevState => [...prevState, ...newComment])\n\t\t\t})\n\t\tsetCommentText('')\n\t\t// GuessesApiService.postGuess(data)\n\t\t// \t.then(this.props.onSubmitSuccess())\n\t\t// \t.catch(this.context.setError);\n\t};\n\tconst comicUrl = \"www.pisshappens.io/#\" + props.match.url\n\tconst { comic_url } = comic\n\n\treturn (\n\t\t<div>\n\t\t\t<Nav />\n\t\t\t<main>\n\t\t\t\t<h2>{comic.title}</h2>\n\t\t\t\t<div className=\"comicItem\">\n\t\t\t\t\t<p>Comic #{comic.id}</p>\n\t\t\t\t\t<p>Title: {comic.title}</p>\n\t\t\t\t\t<p>Description: {comic.description}</p>\n\t\t\t\t\t<p>Added on: {comic.date_created}</p>\n\t\t\t\t\t{/* <p>Comic #{props.comic.id}</p> */}\n\t\t\t\t\t<div className=\"comicSection\">\n\t\t\t\t\t\t{renderComicFrames()}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{/* <a href={comicUrl} target='_blank'>{comicUrl}</a> */}\n\t\t\t\t<CopyUrl copyUrl={copyUrl} comicUrl={comicUrl} />\n\t\t\t\t<section className='commentsSection'>\n\t\t\t\t\t{renderComments()}\n\t\t\t\t\t{/* {comments.map((comment, i) => <p key={i}>{comment.full_name} said: {comment.comment}</p>)} */}\n\t\t\t\t\t<form onSubmit={e => handleSubmit(e, commentText)} >\n\t\t\t\t\t\t<input type='text' placeholder='Write a comment' value={commentText} onChange={(e) => setCommentText(e.target.value)} />\n\t\t\t\t\t\t<button disabled={!commentText}>Post Comment</button>\n\t\t\t\t\t</form>\n\t\t\t\t</section>\n\t\t\t</main>\n\t\t\t<Footer />\n\t\t</div >\n\t)\n}\n\n\nexport default ComicPage","import React, { useState, useEffect, useContext } from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport axios from 'axios';\n\nimport './App.css';\n\nimport HomePage from \"./routes/HomePage/HomePage\"\nimport ComicsListPage from \"./routes/ComicsListPage/ComicsListPage\"\nimport ComicPage from './routes/ComicPage/ComicPage';\n\n// import PrivateRoute from \"../src/Utils/PrivateRoute\"\n// import PublicOnlyRoute from \"../src/Utils/PublicOnlyRoute\";\n\nconst App = () => {\n  // const [title, setTitle] = useState('blah')\n\n\n  return (\n    <div className='App'>\n      <Switch>\n        <Route exact path='/' component={HomePage} />\n        {/* <PublicOnlyRoute path='/login' component={LoginPage} /> */}\n        {/* <PublicOnlyRoute path='/register' component={RegisterPage} /> */}\n        <Route exact path='/comics' component={ComicsListPage} />\n        <Route path='/comics/:comicId' component={ComicPage} />\n      </Switch>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ComicsProvider } from './contexts/ComicsContext'\nimport { CommentsProvider } from './contexts/CommentsContext'\nimport { ComicProvider } from './contexts/ComicContext'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <ComicsProvider>\n        <ComicProvider>\n          <CommentsProvider>\n            <App />\n          </CommentsProvider>\n        </ComicProvider>\n      </ComicsProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}