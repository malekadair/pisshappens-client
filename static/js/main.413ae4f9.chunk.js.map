{"version":3,"sources":["components/Nav/Nav.js","components/Footer/Footer.js","routes/HomePage/HomePage.js","components/Comic/Comic.js","components/Welcome/Welcome.js","contexts/ComicsContext.js","config.js","routes/ComicsListPage/ComicsListPage.js","components/CopyUrl/CopyUrl.js","routes/ComicPage/ComicPage.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","to","Footer","href","target","rel","HomePage","Component","Comic","props","console","log","comic","id","title","description","date_created","ComicsContext","React","createContext","comicsList","error","setError","clearError","setComicsList","clearComicsList","ComicsProvider","children","useState","value","Provider","ComicsListPage","comics","setComics","useContext","clearErrorList","useEffect","a","axios","config","response","data","fetchComics","map","key","CopyUrl","comicUrl","copyUrl","onSubmit","e","type","defaultValue","ComicPage","setComic","comments","setComments","comicId","match","params","fetchComic","fetchComments","url","comic_url","allFrames","i","frames","push","frame","src","renderComicFrames","preventDefault","copyText","document","querySelector","select","setSelectionRange","execCommand","comment","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.413ae4f9.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './Nav.css'\n// import TokenService from '../../services/token-service'\n\n\nconst Nav = () => {\n    const handleLogoutClick = () => {\n        // TokenService.clearAuthToken();\n    };\n\n    const renderLogout = () => {\n        return (\n            <div>\n                <Link className=\"link\" onClick={this.handleLogoutClick} to=\"/\">\n                    Logout\n                </Link>\n            </div>\n        );\n    }\n    const renderLogin = () => {\n        return (\n            <div>\n                <Link className='link' to='/login'>Login</Link>\n                <Link className='link' to='/register'>Register</Link>\n            </div>\n        );\n    }\n    return (\n        <nav className='zone sticky main-nav'>\n            <Link className='right  siteTitle' to='/'>PissHappens</Link>\n            <Link className='comics' to='/comics'>See Comics</Link>\n        </nav>\n    )\n}\n\nexport default Nav\n","import React from 'react'\nimport './Footer.css'\n\nfunction Footer() {\n\treturn (\n\t\t<footer className='zone footer-content'>\n\t\t\t<h2 className='footer-link footer-right'>c@2020</h2>\n\t\t\t<a className='footer-link grace'\n\t\t\t\thref='https://arbitraders.io/'\n\t\t\t\ttarget='_blank'\n\t\t\t\trel='noopener noreferrer'>\n\t\t\t\tKevin Schwindt\n\t\t\t\t</a>\n\t\t\t<a className='footer-link malek'\n\t\t\t\thref='https://malekadair.github.io/portfolio/'\n\t\t\t\ttarget='_blank'\n\t\t\t\trel='noopener noreferrer'>\n\t\t\t\tMalek Adair\n\t\t\t</a>\n\t\t</footer>\n\t)\n}\n\nexport default Footer","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n// import Welcome from '../../components/Welcome/Welcome';\nimport Nav from '../../components/Nav/Nav';\n// import TokenService from '../../services/token-service'\n// import WinnersApiService from '../../services/winners-api-service'\n// import WinnersContext from '../../contexts/winnersContext'\n// import Footer from '../../components/Footer/Footer'\n\nimport './HomePage.css'\nimport Footer from '../../components/Footer/Footer';\n\nclass HomePage extends Component {\n\t// static contextType = WinnersContext\n\n\tcomponentDidMount() {\n\t\t// this.context.clearError();\n\t\t// WinnersApiService.getAllWinners()\n\t\t// \t.then(this.context.setWinners)\n\t\t// \t.catch(this.context.setError)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<header>\n\t\t\t\t\t<Nav />\n\t\t\t\t</header>\n\t\t\t\t<main>\n\t\t\t\t\t<h2>HomePage</h2>\n\t\t\t\t</main>\n\t\t\t\t<Footer />\n\t\t\t\t{/* <header>\n\t\t\t\t\t<Nav />\n\t\t\t\t</header>\n\t\t\t\t<main>\n\t\t\t\t\t<div className='HomePage'>\n\n\t\t\t\t\t\t{TokenService.hasAuthToken()\n\t\t\t\t\t\t\t? <WinnersList />\n\t\t\t\t\t\t\t: <Welcome />}\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Link to='/guess' className='guess-button'>Guess!</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</main>\n\t\t\t\t<Footer /> */}\n\t\t\t</div >\n\t\t)\n\t}\n}\n\nexport default HomePage","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\n\nconst Comic = (props) => {\n\n\n\tconsole.log('props', props)\n\treturn (\n\t\t<Link to={`/comics/${props.comic.id}`}>\n\t\t\t<div className=\"comicItem\">\n\t\t\t\t<h4>{props.comic.title}</h4>\n\t\t\t\t<p>Comic #{props.comic.id}</p>\n\t\t\t\t<p>Title: {props.comic.title}</p>\n\t\t\t\t<p>Description: {props.comic.description}</p>\n\t\t\t\t<p>Added on: {props.comic.date_created}</p>\n\t\t\t\t{/* <p>Comic #{props.comic.id}</p> */}\n\t\t\t</div>\n\t\t</Link>\n\t);\n}\n\nexport default Comic;","import React, { Component } from 'react'\n// import green_ball from '../../img/green_ball.png'\n// import yellow_ball from '../../img/yellow_ball.png'\n// import red_ball from '../../img/red_ball.png'\n// import './Welcome.css'\n\nclass Welcome extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>Welcome</div>\n\t\t\t// <main>\n\t\t\t// \t<div className='grid-wrapper'>\n\t\t\t// \t\t<section className=\"welcomeSection\">\n\t\t\t// \t\t\t<div className='box one'>\n\t\t\t// \t\t\t\t<img src={green_ball} alt='green lottery ball' />\n\t\t\t// \t\t\t\t<p className='cardContent'>Do you want to have plain old fun in guessing the winning numbers for each Saturdayâ€™s PowerBall drawing?</p>\n\t\t\t// \t\t\t</div>\n\t\t\t// \t\t\t<div className='box two'>\n\t\t\t// \t\t\t\t<img src={yellow_ball} alt='yellow lottery ball' />\n\t\t\t// \t\t\t\t<p className='cardContent'>Would you like to share a motivational message to the world? How about promote your social media accounts?</p>\n\t\t\t// \t\t\t</div>\n\t\t\t// \t\t\t<div className='box three'>\n\t\t\t// \t\t\t\t<img src={red_ball} alt='lottery ball' />\n\t\t\t// \t\t\t\t<p className='cardContent'>Create an account, log-in, and submit your guess for the next drawing coming up this Saturday night!</p>\n\t\t\t// \t\t\t</div>\n\t\t\t// \t\t</section>\n\t\t\t// \t</div>\n\t\t\t// </main>\n\t\t)\n\t}\n}\n\nexport default Welcome\n\n\n\n","import React, { useContext, useState } from 'react'\n\nconst ComicsContext = React.createContext({\n\tcomicsList: [],\n\terror: null,\n\tsetError: () => { },\n\tclearError: () => { },\n\tsetComicsList: () => { },\n\tclearComicsList: () => { },\n\t// setReviews: () => { },\n\t// addReview: () => { }\n})\n\nexport function useComicsContext() {\n\treturn useContext(ComicsContext)\n}\nexport function ComicsProvider({ children }) {\n\tconst [comicsList, setComicsList] = useState([{ 'color': 'blue', 'name': 'gray', 'price': 1 }])\n\tconst [error, setError] = useState(false)\n\n\n\t// const setError = error => {\n\t// \tsetState({ error });\n\t// };\n\n\tconst clearError = () => {\n\t\tsetError({ error: null });\n\t};\n\n\t// const setComicsList = comicsList => {\n\t// \tsetComics({ comicsList });\n\t// };\n\n\tconst clearComicsList = () => {\n\t\tsetComicsList({});\n\t};\n\tconst value = {\n\t\tcomicsList: comicsList,\n\t\tsetComicsList: setComicsList,\n\t\terror: error,\n\t\tsetError: setError,\n\t\tclearError: clearError,\n\t\tclearComicsList: clearComicsList\n\t};\n\treturn (\n\t\t<ComicsContext.Provider value={value}>\n\t\t\t{children}\n\t\t</ComicsContext.Provider>\n\t)\n}","export default {\n  BF_API_ENDPOINT: \"https://brandfolder.com/api/v4\",\n  API_ENDPOINT: \"https://aqueous-beach-36007.herokuapp.com/api\",\n  TOKEN_KEY: 'pisshappens-client-auth-token'\n};\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport Welcome from '../../components/Welcome/Welcome';\nimport Nav from '../../components/Nav/Nav';\nimport Footer from '../../components/Footer/Footer';\n\nimport dummyList from '../../dummy'\nimport Comic from '../../components/Comic/Comic';\nimport axios from 'axios';\nimport { useComicsContext } from '../../contexts/ComicsContext'\nimport ComicsApiService from '../../services/comics-api-service'\nimport config from '../../config'\n\nconst ComicsListPage = (props) => {\n\tconst [comics, setComics] = useState([]);\n\tconst {\n\t\tcomicsList,\n\t\tsetComicsList,\n\t\terror,\n\t\tsetError,\n\t\tclearErrorList,\n\t\tclearComicsList\n\t} = useComicsContext()\n\n\tuseEffect(() => {\n\t\tconst fetchComics = async () => {\n\t\t\tconst response = await axios(\n\t\t\t\t`${config.API_ENDPOINT}/comics`\n\t\t\t);\n\n\t\t\tsetComics(response.data);\n\t\t\tsetComicsList(response.data)\n\t\t}\n\t\tfetchComics()\n\t}, []);\n\n\t// useEffect(() => {\n\t// \tconst fetchComics = async () => {\n\t// \t\tconst response = await ComicsApiService.getAllComics()\n\n\t// \t\tsetComics(response.data);\n\t// \t\tsetComicsList(response.data)\n\t// \t}\n\t// \tfetchComics()\n\t// }, []);\n\n\tconst renderComics = () => {\n\t\treturn comics.map(comic => <Comic key={comic.id} comic={comic} />)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<header>\n\t\t\t\t<Nav />\n\t\t\t</header>\n\t\t\t<main>\n\t\t\t\t<h2>Comics List Page</h2>\n\t\t\t\t{renderComics()}\n\t\t\t\t{/* {comics.map(comic => { return (<Comic key={comic.id} comic={comic} />) })} */}\n\t\t\t</main>\n\t\t\t<Footer />\n\t\t\t{/* <header>\n\t\t\t\t\t<Nav />\n\t\t\t\t</header>\n\t\t\t\t<main>\n\t\t\t\t\t<div className='ComicsListPage'>\n\n\t\t\t\t\t\t{TokenService.hasAuthToken()\n\t\t\t\t\t\t\t? <WinnersList />\n\t\t\t\t\t\t\t: <Welcome />}\n\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Link to='/guess' className='guess-button'>Guess!</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</main>\n\t\t\t\t<Footer /> */}\n\t\t</div >\n\t)\n}\n\n\nexport default ComicsListPage","import React from 'react'\n\nfunction CopyUrl(props) {\n\tconst { comicUrl, copyUrl } = props\n\tconsole.log('asdfa', props)\n\treturn (\n\t\t<form onSubmit={(e) => copyUrl(e)}>\n\t\t\t<input id='copyUrl' type='text' defaultValue={comicUrl}></input>\n\t\t\t<button >Copy to clipboard</button>\n\t\t</form>\n\t)\n}\n\nexport default CopyUrl\n","import React, { useContext, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport Welcome from '../../components/Welcome/Welcome';\nimport Nav from '../../components/Nav/Nav';\nimport Footer from '../../components/Footer/Footer';\nimport CopyUrl from '../../components/CopyUrl/CopyUrl';\nimport axios from 'axios';\nimport config from '../../config'\n// import { useComics } from '../../contexts/ComicsContext'\n// import TokenService from '../../services/token-service'\n// import WinnersApiService from '../../services/winners-api-service'\n// import WinnersContext from '../../contexts/winnersContext'\n\n// import './ComicPage.css'\n// import Footer from '../../components/Footer/Footer';\n\nconst ComicPage = (props) => {\n\n\tconst [comic, setComic] = useState([]);\n\t// const { comics, setComics, error, setError, clearError, clearComics } = useComics()\n\tconst [comments, setComments] = useState([])\n\n\tuseEffect(() => {\n\t\tconst { comicId } = props.match.params\n\t\tconst fetchComic = async () => {\n\t\t\tconst response = await axios(\n\t\t\t\t`${config.API_ENDPOINT}/comics/${comicId}`\n\t\t\t);\n\n\t\t\tsetComic(response.data);\n\t\t\tconsole.log('comic', response.data)\n\n\t\t\t// setComics(response.data)\n\t\t}\n\t\tconst fetchComments = async () => {\n\t\t\tconst response = await axios(\n\t\t\t\t`${config.API_ENDPOINT}/comments/comic/${comicId}`\n\t\t\t);\n\n\t\t\tsetComments(response.data);\n\t\t\tconsole.log('comments', response.data)\n\n\t\t\t// setComics(response.data)\n\t\t}\n\t\t// const fetchBFComic = async () => {\n\t\t// \tconst BFResponse = await axios(\n\t\t// \t\t`${config.BF_API_ENDPOINT}/schwindt/pisshappens/comics/attachments`\n\t\t// \t)\n\t\t// }\n\t\tfetchComic()\n\t\tfetchComments()\n\n\t\t// fetchBFComic()\n\t}, []);\n\tconst copyUrl = (e) => {\n\t\te.preventDefault()\n\t\tconst copyText = document.querySelector('#copyUrl');\n\n\t\t/* Select the text field */\n\t\tcopyText.select();\n\t\tcopyText.setSelectionRange(0, 99999); /*For mobile devices*/\n\n\t\t/* Copy the text inside the text field */\n\t\tdocument.execCommand(\"copy\");\n\t}\n\tconst renderComicFrames = () => {\n\t\tconst allFrames = []\n\t\tfor (let i = 1; i <= comic.frames; i++) {\n\t\t\tallFrames.push(`${comic_url}?position=${i}`)\n\t\t}\n\t\treturn allFrames.map((frame, i) => <img src={frame} key={i} />)\n\n\t}\n\tconst renderComments = () => {\n\t\treturn comments.map(comment => <p key={comment.id}>{comment.comment}</p>)\n\t}\n\tconst { comicId } = props.match.params;\n\tconst comicUrl = \"www.pisshappens.io/#\" + props.match.url\n\tconst { comic_url } = comic\n\n\treturn (\n\t\t<div>\n\t\t\t<header>\n\t\t\t\t<Nav />\n\t\t\t</header>\n\t\t\t<main>\n\t\t\t\t<h2>{comic.title}</h2>\n\t\t\t\t<div className=\"comicItem\">\n\t\t\t\t\t<p>Comic #{comic.id}</p>\n\t\t\t\t\t<p>Title: {comic.title}</p>\n\t\t\t\t\t<p>Description: {comic.description}</p>\n\t\t\t\t\t<p>Added on: {comic.date_created}</p>\n\t\t\t\t\t{/* <p>Comic #{props.comic.id}</p> */}\n\t\t\t\t\t{renderComicFrames()}\n\t\t\t\t</div>\n\t\t\t\t{/* <a href={comicUrl} target='_blank'>{comicUrl}</a> */}\n\t\t\t\t<CopyUrl copyUrl={copyUrl} comicUrl={comicUrl} />\n\t\t\t\t<section className='commentsSection'>\n\t\t\t\t\t{renderComments()}\n\t\t\t\t</section>\n\t\t\t</main>\n\t\t\t<Footer />\n\t\t</div >\n\t)\n}\n\n\nexport default ComicPage","import React, { useState, useEffect, useContext } from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport axios from 'axios';\n\nimport './App.css';\n\nimport HomePage from \"./routes/HomePage/HomePage\"\nimport ComicsListPage from \"./routes/ComicsListPage/ComicsListPage\"\nimport ComicPage from './routes/ComicPage/ComicPage';\n\n// import PrivateRoute from \"../src/Utils/PrivateRoute\"\n// import PublicOnlyRoute from \"../src/Utils/PublicOnlyRoute\";\n\nconst App = () => {\n  // const [title, setTitle] = useState('blah')\n\n\n  return (\n    <div className='App'>\n      <Switch>\n        <Route exact path='/' component={HomePage} />\n        {/* <PublicOnlyRoute path='/login' component={LoginPage} /> */}\n        {/* <PublicOnlyRoute path='/register' component={RegisterPage} /> */}\n        <Route exact path='/comics' component={ComicsListPage} />\n        <Route path='/comics/:comicId' component={ComicPage} />\n      </Switch>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ComicsProvider } from './contexts/ComicsContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <ComicsProvider>\n        <App />\n      </ComicsProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}